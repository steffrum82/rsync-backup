Zentrale Paketverwaltung f端r viele Rechner mit Ansible

Ansible installieren

	apt install ansible
	
Ansonsten kann *ansible* auch 端ber Python mittels PIP installiert werden:

	pip install ansible

Das Inventory

	cat <<! > ~/ansible/inventory.ini
	# inventory.ini
	# Liste von Servern auf denen die Aktualisierungen installiert werden sollen
	# Usage:
	# cd ~/ansible
	# source env/bin/activate
	# ansible-playbook -i inventory.ini playbook.yml
	[all:vars]
		ansible_connection=ssh
		ansible_ssh_user=root
	[hosts]
		192.168.123.2 ansible_ssh_pass=password
		192.168.123.3 ansible_ssh_pass=password
		192.168.123.4 ansible_ssh_pass=password
		192.168.123.5 ansible_ssh_pass=password
	!

Das Playbook

	cat <<! > ~/ansible/upgrade.yml 
	#!/usr/bin/env -S ansible-playbook
	- hosts: all
	  tasks:
	  - name: Backup and Intrusion Detection test
	    local_action: command /usr/local/bin/backup-and-intrusion-detection-script test {{inventory_hostname}}
	  - name: Upgrade all packages to the latest version
	    shell: service iwatch stop
	    apt:
	      force_apt_get: True
	      name: "*"
	      state: latest
	      update_cache: yes
	    shell: service iwatch start
	  - name: Backup and Tripwire update
	    local_action: command /usr/local/bin/backup-and-intrusion-detection-script update {{inventory_hostname}}
	!
	chmod +x ~/ansible/playbook.yml

Um Pakete zu installieren, kann man das Playbook entsprechend um einen Task erweitern. Das local_action command ist hier nur ein Beispiel und muss sonst entfernt werden.

## Ansible 端ber einen SOCKS-Proxy ausf端hren

Benutzerdefinierte SSH-Konfigurationsdatei:

~/ansible/ssh_config

	Host *
		ProxyCommand /usr/bin/nc -x 127.0.0.1:1080 %h %p

~/ansible/inventory.ini

	[all:vars]
		ansible_ssh_common_args=-F ssh_config


#!/usr/bin/env sh
# Rsync backup

#set -x
#set -e
export LC_ALL=C
export PATH="/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$HOME/.local/bin"

rsync="$(command -v rsync)" || rsync="/usr/bin/rsync"
run_parts="$(command -v run-parts)" || run_parts="/usr/bin/run-parts"

get_config_dir () {
	local dir=
	for dir in .rsync-backup ~/.rsync-backup /etc/rsync-backup; do
		if test -d $dir; then
			break
		fi
	done
	echo $dir
}

backup () {
	# Backup erstellen

	# pre-hooks ausführen
	if test -d "$config_dir/pre-hooks.d"; then
		$run_parts -- "$config_dir/pre-hooks.d"
	fi

	# Daten ins Backup kopieren
	$rsync $options -avAHSX -Ph --delete --delete-excluded --filter="merge $config_dir/rsync-filter" "$src" "$dest"

	# post-hooks ausführen
	if test -d "$config_dir/post-hooks.d"; then
		$run_parts -- "$config_dir/post-hooks.d"
	fi
}

usage () {
	# Usage ausgeben
	cat <<! >&2
Usage: $0 [--dest "./"] [-- [additional Rsync options…]]

For more informations see the rsync-backup(1) manpage.
!
}

TEMP=`getopt -o "C:hs:d:" --long "config-dir:,help,src:,dest:" -n "$0" -- "$@"`

if [ $? -ne 0 ]; then
	_usage
	echo 'Terminating...' >&2
	exit 1
fi

# Note the quotes around "$TEMP": they are essential!
eval set -- "$TEMP"
unset TEMP

while true; do
	case "$1" in

		'-h'|'--help')
			usage
			shift
			exit
		;;

		'-C'|'--config-dir')
			config_dir="$2"
			shift 2
			continue
		;;

		'-s'|'--src')
			src="$2"
			shift 2
			continue
		;;

		'-d'|'--dest')
			dest="$2"
			shift 2
			continue
		;;

		'--')
			shift
			break
		;;

		*)
			echo 'Internal error!' >&2
			exit 1
		;;
	esac
done

config_dir="${config_dir:-$(get_config_dir)}"
dest="${dest:-.}"
options="${@:-}"
src="${src:-/}"
test -d "$config_dir"
eval backup

